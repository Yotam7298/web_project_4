!function(){"use strict";class e{constructor(e,t,s,n,o){this._title=e.name,this._link=e.link,this._likes=e.likes,this._cardId=e._id,this._owner=e.owner,this._selector=t,this._handleCardClick=s,this._handleRemoveElement=n,this._handleLikeClick=o}_getTemplate(){return document.querySelector("#element").content.querySelector(this._selector).cloneNode(!0)}_setEventListeners(){const e=this._element.querySelector(".element__remove-button"),t=this._element.querySelector(".element__image"),s=this._element.querySelector(".element__like-button");this._element.addEventListener("click",(n=>{switch(n.target){case e:this._handleRemoveElement(n);break;case t:this._handleCardClick(n);break;case s:this._handleLikeClick(n)}}))}generateCard(){this._element=this._getTemplate(),this._element._id=this._cardId,this._element.likes=this._likes,this._element.owner=this._owner;const e=this._element.querySelector(".element__image"),t=this._element.querySelector(".element__caption-text"),s=this._element.querySelector(".element__like-counter");return this._setEventListeners(),t.textContent=this._title,e.src=this._link,e.alt="Photo of ".concat(this._title),s.textContent=this._likes.length,this._element}}class t{constructor(e,t){this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass,this._formElement=t,this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector)}resetValidation(){this._toggleButtonState(this._inputList,this._buttonElement),this._inputList.forEach((e=>{this._hideInputError(e)}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}_setEventListeners(){this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this._toggleButtonState(this._inputList,this._buttonElement)}))}))}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e,e.validationMessage)}_hideInputError(e){const t=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.remove(this._inputErrorClass),t.textContent="",t.classList.remove(this._errorClass)}_showInputError(e,t){const s=this._formElement.querySelector(".".concat(e.id,"-error"));e.classList.add(this._inputErrorClass),s.textContent=t,s.classList.add(this._errorClass)}_toggleButtonState(e,t){this._isFormInvalid(e)?(t.classList.add(this._inactiveButtonClass),t.disabled=!0):(t.classList.remove(this._inactiveButtonClass),t.disabled=!1)}_isFormInvalid(e){return e.some((e=>!e.validity.valid))}}class s{constructor(e){this._popup=document.querySelector(e),this._closeButton=this._popup.querySelector(".close-button"),this.close=this.close.bind(this),this._handleClickClose=this._handleClickClose.bind(this),this._handleEscClose=this._handleEscClose.bind(this)}open(){this._popup.classList.add("popup_opened"),this.setEventListeners()}close(){this._popup.classList.remove("popup_opened"),this.removeEventListeners()}setEventListeners(){this._closeButton.addEventListener("click",this.close),this._popup.addEventListener("mousedown",this._handleClickClose),document.addEventListener("keydown",this._handleEscClose)}removeEventListeners(){this._closeButton.removeEventListener("click",this.close),this._popup.removeEventListener("mousedown",this._handleClickClose),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}_handleClickClose(e){e.target===this._popup&&this.close()}}class n extends s{constructor(e,t){var s,n;super(e),n=e=>{const t=this._getInputValues();this._formSubmitHandler(e,t)},(s="_handleSubmit")in this?Object.defineProperty(this,s,{value:n,enumerable:!0,configurable:!0,writable:!0}):this[s]=n,this._formSubmitHandler=t,this._popupForm=this._popup.querySelector(".form"),this._inputsArray=this._popup.querySelectorAll(".form__input")}_getInputValues(){const e={};return this._inputsArray.forEach((t=>{const s=t.id.split("-");e[s[0]]=t.value})),e}setEventListeners(){super.setEventListeners(),this._popupForm.addEventListener("submit",this._handleSubmit)}removeEventListeners(){super.removeEventListeners(),this._popupForm.removeEventListener("submit",this._handleSubmit)}close(){this._popupForm.reset(),this.removeEventListeners(),super.close()}}const o=document.querySelector(".profile__edit-button"),r={name:document.querySelector("#name-input"),about:document.querySelector("#about-input")},i=document.querySelector(".profile__avatar-edit"),l=document.querySelector(".profile__add-button"),a=document.querySelector(".elements__list"),c=[],h=Array.from(document.querySelectorAll(".form")),u={inputSelector:".form__input",submitButtonSelector:".form__save",inactiveButtonClass:"form__save_disabled",inputErrorClass:"form__input_invalid",errorClass:"form__input-error_active"};function _(){(function(e){const t=document.querySelector(".popup_opened").querySelector(".form").id;return c.find((e=>e.id===t)).validator})().resetValidation()}function d(){m.getAllInfo().then((e=>{const t=e[0],s=e[1];E.renderer(s,t._id)}))}function p(e,t){document.querySelector(t).querySelector(".form__save").textContent=e?"Saving...":"Save"}const m=new class{constructor(e){this._options=e}_verifyResponse(e){return e.ok?e.json():Promise.reject("Something went wrong, Error: ".concat(e.status))}_logInfo(e){console.log("Request was successful:"),console.log(e)}getAllInfo(){return Promise.all([this.getUserInfo(),this.loadCards()]).then((e=>e))}getUserInfo(){return fetch("".concat(this._options.baseUrl,"/users/me"),{headers:this._options.headers}).then((e=>this._verifyResponse(e))).then((e=>e)).catch((e=>console.log(e)))}loadCards(){return fetch("".concat(this._options.baseUrl,"/cards"),{headers:this._options.headers}).then((e=>this._verifyResponse(e))).then((e=>e)).catch((e=>console.log(e)))}editProfileInfo(e){return fetch("".concat(this._options.baseUrl,"/users/me"),{method:"PATCH",headers:this._options.headers,body:JSON.stringify({name:e.name,about:e.about})}).then((e=>this._verifyResponse(e))).then((e=>e)).catch((e=>console.log(e)))}editProfilePicture(e){return fetch("".concat(this._options.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this._options.headers,body:JSON.stringify({avatar:e.avatar})}).then((e=>this._verifyResponse(e))).then((e=>(this._logInfo(e),e))).catch((e=>console.log(e)))}addNewCard(e){return fetch("".concat(this._options.baseUrl,"/cards"),{method:"POST",headers:this._options.headers,body:JSON.stringify({name:e.title,link:e.link})}).then((e=>this._verifyResponse(e))).then((e=>{this._logInfo(e)})).catch((e=>console.log(e)))}deleteCard(e){return fetch("".concat(this._options.baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this._options.headers}).then((e=>this._verifyResponse(e))).then((e=>{this._logInfo(e)})).catch((e=>console.log(e)))}changeCardLike(e,t){return fetch("".concat(this._options.baseUrl,"/cards/likes/").concat(e),{method:t,headers:this._options.headers}).then((e=>this._verifyResponse(e))).then((e=>(this._logInfo(e),e))).catch((e=>console.log(e)))}}({baseUrl:"https://around.nomoreparties.co/v1/cohort-3-en",headers:{authorization:"f800af66-4bca-42fd-8139-117d10b5a510","Content-Type":"application/json"}}),v=new class{constructor(e,t,s){this._userName=document.querySelector(e),this._userAbout=document.querySelector(t),this._userAvatar=document.querySelector(s)}getUserInfo(){const e={};return e.name=this._userName.textContent,e.about=this._userAbout.textContent,e}setUserInfo(e){this._userName.textContent=e.name,this._userAbout.textContent=e.about}setUserAvatar(e){this._userAvatar.src=e}}("#profile-name","#profile-about","#profile-avatar"),f=new class extends s{constructor(e){super(e),this._popupImage=this._popup.querySelector("#popup-image"),this._popupCaption=this._popup.querySelector("#popup-caption")}open(e,t){super.open(),this._setPopupContent(e)}_setPopupContent(e){const t=e.currentTarget.querySelector(".element__image"),s=e.currentTarget.querySelector(".element__caption-text");this._popupImage.src=t.src,this._popupImage.alt="Enlarged ".concat(t.alt),this._popupCaption.textContent=s.textContent}}(".image-popup"),E=new class{constructor(e,t){let{renderer:s,modifier:n}=e;this._renderer=s,this._modifier=n,this._container=document.querySelector(t)}renderer(e,t){e.slice().reverse().forEach((e=>{const s=this._renderer(e);this._modifier(s,t),this.addItem(s)}))}addItem(e){this._container.prepend(e)}}({renderer:t=>new e(t,".elements__list-item",(e=>{f.open(e)}),(e=>{const t=e.currentTarget;g.open(),g.confirmDelete(t)}),(e=>{const t=e.currentTarget,s=e.target,n=t.querySelector(".element__like-counter");m.getUserInfo().then((e=>{t.likes.some((t=>t._id===e._id))?m.changeCardLike(t._id,"DELETE").then((e=>{t.likes=e.likes,n.textContent=e.likes.length,s.classList.remove("element__like-button_active")})):m.changeCardLike(t._id,"PUT").then((e=>{t.likes=e.likes,n.textContent=e.likes.length,s.classList.add("element__like-button_active")}))}))})).generateCard(),modifier:(e,t)=>{const s=e.querySelector(".element__remove-button"),n=e.querySelector(".element__like-button");e.owner._id===t&&s.classList.add("element__remove-button_owner"),e.likes.some((e=>e._id===t))&&n.classList.add("element__like-button_active")}},".elements__list"),C=new n(".edit-popup",((e,t)=>{e.preventDefault(),p(!0,".edit-popup"),m.editProfileInfo(t).then((e=>{v.setUserInfo(e),p(!1,".edit-popup")})),C.close()})),b=new n(".avatar-popup",((e,t)=>{e.preventDefault(),p(!0,".avatar-popup"),m.editProfilePicture(t).then((e=>{v.setUserAvatar(e.avatar),b.close(),p(!1,".avatar-popup")}))})),y=new n(".add-popup",((e,t)=>{e.preventDefault(),p(!0,".add-popup"),m.addNewCard(t).then((()=>{a.innerHTML="",d(),p(!1,".add-popup")})),y.close()})),g=new class extends s{constructor(e,t){super(e),this._confirmHandler=t}confirmDelete(e){this._popup.querySelector(".confirm-button").addEventListener("click",(()=>{this._confirmHandler(e),super.close()}))}}(".delete-popup",(e=>{const t=e._id;m.deleteCard(t).then((()=>{a.innerHTML="",d()}))}));o.addEventListener("click",(()=>{var e;e=v.getUserInfo(),r.name.value=e.name,r.about.value=e.about,C.open(),_()})),i.addEventListener("click",(()=>{b.open(),_()})),l.addEventListener("click",(()=>{y.open(),_()})),h.forEach((e=>{const s=new t(u,e);c.push({validator:s,id:e.id}),s.enableValidation()})),m.getAllInfo().then((e=>{const t=e[0],s=e[1];v.setUserInfo(t),v.setUserAvatar(t.avatar),E.renderer(s,t._id)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,